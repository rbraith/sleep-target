/*
 * Copyright (c) 2020-2021 Rich Braithwaite (rbraithwaite.dev@gmail.com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'

// for hilt
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

apply plugin: 'androidx.navigation.safeargs'

apply plugin: 'com.mikepenz.aboutlibraries.plugin'

// upload key config
def keystorePropertiesFile = rootProject.file('secrets/sleep-target-keystore.properties')
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    signingConfigs {
        upload {
            storeFile file(keystoreProperties['keystoreFilepath'])
            storePassword keystoreProperties['keystorePassword']
            keyAlias keystoreProperties['uploadKeyAlias']
            keyPassword keystoreProperties['uploadKeyPassword']
        }
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.rbraithwaite.sleeptarget"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 300000
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // have Android Test Orchestrator clear the package data after each test
        testInstrumentationRunnerArguments clearPackageData: 'true'

        // needed for vector drawables to work
        vectorDrawables.useSupportLibrary = true

        // TODO [21-03-11 5:48PM] -- Using multidex is a quick temporary solution after I ran into the
        //  apk 65536 method limit (from including material-calendarview I guess) - I need to implement a
        //  better solution, such as configuring proguard-rules.pro or pruning my dependencies.
        //  --
        //  more info:
        //  https://stackoverflow.com/a/58092339
        //  https://stackoverflow.com/a/58065783
        //  https://developer.android.com/studio/build/multidex
        //  https://developer.android.com/studio/build/shrink-code
        //  https://stackoverflow.com/a/59532889
        //  https://stackoverflow.com/questions/48249633/errorcannot-fit-requested-classes-in-a-single-dex-file-try-supplying-a-main-dex.
        // method limit fix
        multiDexEnabled true

        // Export db schema to a JSON file at compile time (used to help create pre-populated
        // db assets)
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    // https://developer.android.com/studio/write/java8-support#library-desugaring
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            // needed for robolectric, see: http://robolectric.org/getting-started/
            includeAndroidResources = true
        }
        animationsDisabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.upload
        }
    }

    // https://blog.danlew.net/2015/11/02/sharing-code-between-unit-tests-and-instrumentation-tests-on-android/
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    // TODO [21-06-16 11:54PM] -- maybe reconsider re-implementing ViewBinding, but it doesn't work
    //  very well with my current xml file/id naming scheme (I would probably need to remove
    //  most of the organizing prefixes from the names).
//    buildFeatures {
//        // ViewBinding
//        viewBinding true
//    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'

    // needed for java 8 support
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // UI
    implementation "com.google.android.material:material:1.2.1"
    implementation 'androidx.navigation:navigation-fragment:2.3.1'
    implementation 'androidx.navigation:navigation-ui:2.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.fragment:fragment:1.3.0-beta02'

    // FlexboxLayoutManager
    implementation "com.google.android.flexbox:flexbox:3.0.0"

    // material-calendarview
    implementation 'com.github.prolificinteractive:material-calendarview:2.0.0'

    // viewmodel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'

    // room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // hilt
    implementation 'com.google.dagger:hilt-android:2.28-alpha'
    kapt 'com.google.dagger:hilt-android-compiler:2.28-alpha'
    // @ViewModelInject
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    // TODO [21-03-11 5:51PM] -- see multidex TODO comment above.
    // method limit fix
    implementation 'androidx.multidex:multidex:2.0.1'

    // AboutLibraries
    implementation "com.mikepenz:aboutlibraries:8.9.1"

    // ***********************************************
    // test deps
    // ***********************************************
    def espresso_version = "3.3.0"
    def junit_version = "4.12"
    def androidx_junit_version = "1.1.2"
    def nav_testing_version = "2.3.1"

    // test
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test.ext:junit:$androidx_junit_version"
    testImplementation "org.robolectric:robolectric:4.4"
    testImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    testImplementation "androidx.navigation:navigation-testing:$nav_testing_version"
    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation "org.mockito:mockito-core:1.10.19"

    // TODO [20-11-23 2:40AM] -- This dependency seems to cause problems with Mockito?
    //  I will need to investigate this before I can use InstantTaskExecutorRule.
    //  In the meantime, keep using synchronizers.
    // InstantTaskExecutorRule
//    testImplementation "android.arch.core:core-testing:1.1.1"

    // androidTest
    // needed to change these to debugImplementation from androidTestImplementation in
    // order to get FragmentScenario working
    // https://www.iditect.com/how-to/58073879.html
    debugImplementation "junit:junit:$junit_version"
    debugImplementation "androidx.test.ext:junit:$androidx_junit_version"
    debugImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    debugImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    debugImplementation "androidx.navigation:navigation-testing:$nav_testing_version"
    debugImplementation "androidx.fragment:fragment-testing:1.2.5"
    // android test orchestrator
    // https://developer.android.com/training/testing/junit-runner.html#ato-gradle
    debugImplementation "androidx.test:runner:1.3.0"
    debugImplementation "org.mockito:mockito-core:1.10.19"
    androidTestUtil 'androidx.test:orchestrator:1.3.0'
}